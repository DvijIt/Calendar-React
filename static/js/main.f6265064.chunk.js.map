{"version":3,"sources":["features/Header/Navigation/componetns/CreateEventButton.jsx","features/Header/Navigation/componetns/MonthInfo.jsx","features/Header/Navigation/componetns/Navigation.jsx","features/Header/Week/componetns/WeekNamesDays.jsx","features/Header/Week/componetns/WeekNumbersDays.jsx","features/Header/Week/componetns/Week.jsx","features/Header/componetns/Header.jsx","features/Main/TimeScale/componetns/TimeScale.jsx","features/Main/SectorCalendarGrig/Redline/components/RedLine.jsx","Gateway.js","features/Modal/components/DeleteEventPopup.jsx","features/Main/SectorCalendarGrig/Event/componetns/Event.jsx","features/Main/SectorCalendarGrig/Days/components/Sell.jsx","features/Main/SectorCalendarGrig/Days/components/ColumnDay.jsx","features/Main/SectorCalendarGrig/componetns/CalendarGrid.jsx","features/Modal/components/DatePicker.jsx","features/Modal/components/Popup.jsx","Calendar.jsx","App.jsx","index.jsx"],"names":["CreateButton","openPopup","this","props","className","type","onClick","data-option","PureComponent","defaultProps","PropTypes","func","MonthInfo","getCurrentMonth","string","Navigation","handleNextWeek","handlePrevWeek","handleCurrentWeek","small","NameOfDay","map","el","key","React","NumbersOfDay","currentDay","day","weekDays","Array","fill","activeDay","startOfWeek","moment","startOf","add","format","number","Week","Date","toString","split","slice","Header","currentMonth","TimeScale","hoursArray","_","index","hour","margin","Redline","style","top","baseUrl","fetchEventsList","fetch","then","response","ok","json","eventsList","DeleteEventPopup","id","checkDelete","handleClick","eventId","method","role","tabIndex","onKeyPress","Event","showDeletePopup","setState","show","closeDeletePopup","handleGetEventData","e","getEventData","state","title","timeStart","timeEnd","description","color","myStyle","backgroundColor","data-id","onPointerEnter","onPointerLeave","Component","Sell","date","events","time","findEvent","find","event","data-time","array","ColumnDay","column","data-date","RedLine","CalendarGrid","DatePicker","componentDidMount","dateOption","autoClose","onClose","handleChange","i18n","cancel","clear","done","months","monthsShort","nextMonth","previousMonth","weekdays","weekdaysAbbrev","weekdaysShort","elems","document","querySelector","M","Datepicker","init","value","M_Datepicker","getDate","onChange","Popup","changeDate","target","name","handleSubmit","preventDefault","undefined","createNewEvent","editEventData","newEvent","closePopup","headers","body","JSON","stringify","Error","dataEvent","onSubmit","placeholder","htmlFor","Calendar","startDate","endDate","startMonth","startYear","endMonth","endYear","correctDate","showPopup","dataset","option","nextElementSibling","parentNode","targetEvent","closest","handleDelete","prevState","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6265064.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass CreateButton extends PureComponent {\n  render() {\n    const { openPopup } = this.props;\n    return (\n      <div className=\"header__create-event\">\n        <button\n          type=\"button\"\n          className=\"waves-effect waves-teal z-depth-2 white black-text create-btn\"\n          onClick={openPopup}\n          data-option=\"buttonCreateEvent\"\n        >\n          Создать\n        </button>\n      </div>\n\n    );\n  }\n}\n\nCreateButton.propTypes = {\n  openPopup: PropTypes.func,\n};\n\nCreateButton.defaultProps = {\n  openPopup: PropTypes.func,\n};\n\nexport default CreateButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MonthInfo = ({ getCurrentMonth }) => (\n  <div className=\"header__month-info\">\n    <span>{getCurrentMonth}</span>\n  </div>\n);\n\nMonthInfo.propTypes = {\n  getCurrentMonth: PropTypes.string,\n};\n\nMonthInfo.defaultProps = {\n  getCurrentMonth: PropTypes.string,\n};\n\nexport default MonthInfo;\n","import React, { PureComponent } from 'react';\nimport { Icon } from 'react-materialize';\nimport PropTypes from 'prop-types';\n\nclass Navigation extends PureComponent {\n  render() {\n    const { handleNextWeek, handlePrevWeek, handleCurrentWeek } = this.props;\n    return (\n      <div className=\"header__navigation\">\n        <button type=\"button\" className=\"white black-text btn btn-current-week\" onClick={handleCurrentWeek}>Сегодня</button>\n        <button type=\"button\" className=\"white black-text btn-flat\" onClick={handlePrevWeek}>\n          <Icon small>\n            chevron_left\n          </Icon>\n        </button>\n        <button\n          type=\"button\"\n          className=\"white black-text btn-flat\"\n          onClick={handleNextWeek}\n        >\n          <Icon small>\n            chevron_right\n          </Icon>\n        </button>\n      </div>\n    );\n  }\n}\n\nNavigation.propTypes = {\n  handleCurrentWeek: PropTypes.func,\n  handlePrevWeek: PropTypes.func,\n  handleNextWeek: PropTypes.func,\n};\n\nNavigation.defaultProps = {\n  handleCurrentWeek: PropTypes.func,\n  handlePrevWeek: PropTypes.func,\n  handleNextWeek: PropTypes.func,\n};\n\nexport default Navigation;\n","import React from 'react';\n\nclass NameOfDay extends React.PureComponent {\n  render() {\n    const weekDays = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'];\n    return (\n      <div className=\"days-name-list\">\n        {weekDays.map((el) => <span className=\"day-name\" key={el}>{el}</span>) }\n      </div>\n    );\n  }\n}\n\nexport default NameOfDay;\n","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nconst NumbersOfDay = ({ day }) => {\n  let currentDay = day;\n\n  const arr = Array(7).fill('0');\n  const weekDays = arr.map(() => {\n    let activeDay;\n    const startOfWeek = moment().startOf('isoWeek').add(currentDay, 'day');\n    if (moment().format('DD.MM.YY') === startOfWeek.format('DD.MM.YY')) {\n      activeDay = 'day-number active';\n    } else {\n      activeDay = 'day-number';\n    }\n\n    currentDay += 1;\n    return (\n      <span key={currentDay} className={activeDay}>{startOfWeek.format('DD')}</span>\n    );\n  });\n\n  return <div className=\"days-numbers-list\">{weekDays}</div>;\n};\n\nNumbersOfDay.propTypes = {\n  day: PropTypes.number,\n};\n\nNumbersOfDay.defaultProps = {\n  day: PropTypes.number,\n};\n\nexport default NumbersOfDay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NameOfDay from './WeekNamesDays';\nimport NumberOfDay from './WeekNumbersDays';\n\nconst Week = ({ day }) => (\n  <div className=\"header__week\">\n    <div className=\"timezone\">\n      {new Date().toString().split(' ')[5].slice(0, 6)}\n    </div>\n    <div className=\"weekdata\">\n      <NameOfDay />\n      <NumberOfDay day={day} />\n    </div>\n  </div>\n);\n\nWeek.propTypes = {\n  day: PropTypes.number,\n};\n\nWeek.defaultProps = {\n  day: PropTypes.number,\n};\n\nexport default Week;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport CreateButton from '../Navigation/componetns/CreateEventButton';\nimport MonthInfo from '../Navigation/componetns/MonthInfo';\nimport Navigation from '../Navigation/componetns/Navigation';\nimport './styles.scss';\nimport Week from '../Week/componetns/Week';\n\nconst Header = ({\n  day,\n  handleNextWeek,\n  handlePrevWeek,\n  handleCurrentWeek,\n  currentMonth,\n  openPopup,\n}) => (\n  <header className=\"calendar__header header\">\n    <div className=\"header__top-info\">\n      <CreateButton openPopup={openPopup} />\n      <Navigation\n        handleNextWeek={handleNextWeek}\n        handlePrevWeek={handlePrevWeek}\n        handleCurrentWeek={handleCurrentWeek}\n      />\n      <MonthInfo getCurrentMonth={currentMonth} />\n    </div>\n    <Week day={day} />\n  </header>\n);\n\nHeader.propTypes = {\n  day: PropTypes.number,\n  handleNextWeek: PropTypes.func,\n  handlePrevWeek: PropTypes.func,\n  handleCurrentWeek: PropTypes.func,\n  currentMonth: PropTypes.string,\n  openPopup: PropTypes.func,\n};\n\nHeader.defaultProps = {\n  day: PropTypes.number,\n  handleNextWeek: PropTypes.func,\n  handlePrevWeek: PropTypes.func,\n  handleCurrentWeek: PropTypes.func,\n  currentMonth: PropTypes.string,\n  openPopup: PropTypes.func,\n};\n\nexport default Header;\n","import React, { PureComponent } from 'react';\nimport './styles.scss';\n\nclass TimeScale extends PureComponent {\n  render() {\n    const hoursArray = Array(23).fill('0');\n    return (\n      <aside className=\"calendar__timescale\">\n        {hoursArray.map((_, index) => {\n          const hour = index + 1;\n          return (\n            <div key={hour} className=\"hour\">\n              {hour < 10 ? `0${hour}:00` : `${hour}:00`}\n            </div>\n          );\n        })}\n      </aside>\n    );\n  }\n}\n\nexport default TimeScale;\n","import React from 'react';\nimport moment from 'moment';\nimport './styles.scss';\n\nconst hour = +moment().format('HH');\nconst minute = +moment().format('mm');\nconst margin = hour * 60 + minute;\n\nconst Redline = () => (\n  <div className=\"redline\" style={{ top: `${margin}px` }} />\n);\n\nexport default Redline;\n","const baseUrl = 'https://5ec377e28ebdcc0016a5a8e4.mockapi.io/api/v1/events';\n\nexport const fetchEventsList = () => fetch(baseUrl)\n  .then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n  })\n  .then((eventsList) => eventsList);\n\nexport const createEvent = (newEvent) => fetch(baseUrl, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=utf-8',\n  },\n  body: JSON.stringify(newEvent),\n}).then((response) => {\n  if (!response.ok) {\n    throw new Error('Failed to create event');\n  }\n});\n\nexport const editEvent = (eventId, dataEvent) => fetch(`${baseUrl}/${eventId}`, {\n  method: 'PUT',\n  headers: {\n    'Content-type': 'application/json; charset=utf-8',\n  },\n  body: JSON.stringify(dataEvent),\n}).then((response) => {\n  if (!response.ok) {\n    throw new Error('Failed to edit data event');\n  }\n});\n\nexport const deleteEvent = (eventId) => fetch(`${baseUrl}/${eventId}`, {\n  method: 'DELETE',\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'react-materialize';\nimport { deleteEvent } from '../../../Gateway';\nimport './modalDelete.scss';\n\nconst DeleteEventPopup = ({ id, checkDelete }) => {\n  const handleClick = () => {\n    deleteEvent(id)\n      .then(() => {\n        checkDelete();\n      });\n  };\n  return (\n    <div id=\"modal2\" className=\"popup popup-delete z-depth-1\">\n      <div\n        role=\"button\"\n        tabIndex=\"0\"\n        className=\"popup-content\"\n        onClick={handleClick}\n        onKeyPress={handleClick}\n        >\n        <Icon small>delete</Icon>\n        <span>Удалить</span>\n      </div>\n    </div>\n  );\n};\n\nDeleteEventPopup.propTypes = {\n  id: PropTypes.string,\n  checkDelete: PropTypes.func,\n};\n\nDeleteEventPopup.defaultProps = {\n  id: PropTypes.string,\n  checkDelete: PropTypes.func,\n};\n\nexport default DeleteEventPopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteEventPopup from '../../../../Modal/components/DeleteEventPopup';\nimport './styles.scss';\n\nclass Event extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    };\n  }\n\n  showDeletePopup = () => {\n    if (this) {\n      this.setState({ show: true });\n    }\n  }\n\n  closeDeletePopup = () => {\n    if (this) {\n      this.setState({ show: false });\n    }\n  }\n\n  handleGetEventData = (e) => {\n    const { getEventData } = this.props;\n    getEventData(e, this.props);\n  }\n\n  render() {\n    const {\n      id, title, timeStart, timeEnd, description, color, checkDelete,\n    } = this.props;\n\n    const myStyle = {\n      top: `${timeStart.slice(3)}px`,\n      backgroundColor: color || '#6495ed',\n    };\n    const { show } = this.state;\n\n    return (\n      <div\n        role=\"button\"\n        className=\"event\"\n        data-option=\"event\"\n        data-id={id}\n        style={myStyle}\n        onPointerEnter={this.showDeletePopup}\n        onPointerLeave={this.closeDeletePopup}\n        onClick={this.handleGetEventData}\n        onKeyPress={this.handleGetEventData}\n        tabIndex={0}\n      >\n        <h4 className=\"event-title\">{title}</h4>\n        <div className=\"event-time\">{`${timeStart} - ${timeEnd}`}</div>\n        <div className=\"event-description\">{description}</div>\n        {show && <DeleteEventPopup id={id} checkDelete={checkDelete} />}\n      </div>\n    );\n  }\n}\n\nEvent.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  timeStart: PropTypes.string,\n  timeEnd: PropTypes.string,\n  description: PropTypes.string,\n  color: PropTypes.string,\n  checkDelete: PropTypes.func,\n  getEventData: PropTypes.func,\n};\n\nEvent.defaultProps = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  timeStart: PropTypes.string,\n  timeEnd: PropTypes.string,\n  description: PropTypes.string,\n  color: PropTypes.string,\n  checkDelete: PropTypes.func,\n  getEventData: PropTypes.func,\n};\n\nexport default Event;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Event from '../../Event/componetns/Event';\n\nclass Sell extends React.Component {\n  render() {\n    const {\n      date, events, checkDelete, openPopup, getEventData,\n    } = this.props;\n    const hoursArray = Array(24).fill('0');\n    return (\n      hoursArray.map((_, index) => {\n        const time = index < 10 ? `0${index}:00` : `${index}:00`;\n        const findEvent = events.find((event) => event.date === date && event.timeStart === time);\n        return (\n          <div\n            role=\"button\"\n            tabIndex=\"0\"\n            key={time}\n            className=\"sell\"\n            data-time={time}\n            data-option=\"sell\"\n            onClick={openPopup}\n            onKeyPress={openPopup}\n          >\n            {typeof findEvent !== 'undefined' && (<Event {...findEvent} checkDelete={checkDelete} openPopup={openPopup} getEventData={getEventData} />) }\n          </div>\n        );\n      })\n    );\n  }\n}\n\nSell.propTypes = {\n  date: PropTypes.string,\n  openPopup: PropTypes.func,\n  checkDelete: PropTypes.func,\n  events: PropTypes.instanceOf(Array),\n  getEventData: PropTypes.func,\n};\n\nSell.defaultProps = {\n  date: PropTypes.string,\n  openPopup: PropTypes.func,\n  checkDelete: PropTypes.func,\n  events: PropTypes.array,\n  getEventData: PropTypes.func,\n};\n\nexport default Sell;\n","import React from 'react';\nimport moment from 'moment';\nimport RedLine from '../../Redline/components/RedLine';\nimport Sell from '../components/Sell';\nimport './styles.scss';\n\nconst ColumnDay = ({\n  day, events, checkDelete, openPopup, getEventData,\n}) => {\n  let id = day;\n  const daysArray = Array(7).fill('0');\n  const columnsDays = daysArray.map(() => {\n    const startOfWeek = moment().startOf('isoWeek').add(id, 'day');\n    id += 1;\n    return startOfWeek.format('DD MM YYYY');\n  });\n\n  return (\n    columnsDays.map((column) => (\n      <div\n        key={column}\n        className=\"column__day\"\n        data-date={column}\n      >\n        <Sell\n          date={column}\n          events={events}\n          checkDelete={checkDelete}\n          openPopup={openPopup}\n          getEventData={getEventData}\n        />\n        {column === moment().format('DD MM YYYY') && (<RedLine />)}\n      </div>\n    ))\n  );\n};\n\nexport default ColumnDay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TimeScale from '../../TimeScale/componetns/TimeScale';\nimport ColumnDay from '../Days/components/ColumnDay';\nimport './calendar.scss';\n\nconst CalendarGrid = ({\n  day, openPopup, checkDelete, events, getEventData,\n}) => (\n  <main className=\"main calendar__grid\">\n    <TimeScale />\n    <div className=\"calendar__columns\">\n      <ColumnDay\n        day={day}\n        events={events}\n        checkDelete={checkDelete}\n        openPopup={openPopup}\n        getEventData={getEventData}\n      />\n    </div>\n  </main>\n);\n\nCalendarGrid.propTypes = {\n  day: PropTypes.number,\n  openPopup: PropTypes.func,\n  checkDelete: PropTypes.func,\n  events: PropTypes.instanceOf(Array),\n  getEventData: PropTypes.func,\n};\n\nCalendarGrid.defaultProps = {\n  day: PropTypes.number,\n  openPopup: PropTypes.func,\n  checkDelete: PropTypes.func,\n  events: PropTypes.array,\n  getEventData: PropTypes.func,\n};\n\nexport default CalendarGrid;\n","import React, { Component } from 'react';\nimport M from 'materialize-css/dist/js/materialize';\nimport PropTypes from 'prop-types';\n\nexport default class DatePicker extends Component {\n  componentDidMount = () => {\n    const dateOption = {\n      autoClose: true,\n      onClose: this.handleChange,\n      format: 'dd mm yyyy',\n      i18n: {\n        cancel: 'Cancel',\n        clear: 'Clear',\n        done: 'Ok',\n        months: [\n          'Январь',\n          'Ферварь',\n          'Март',\n          'Апрель',\n          'Май',\n          'Июнь',\n          'Июль',\n          'Август',\n          'Сентябрь',\n          'Октябрь',\n          'Ноябрь',\n          'Декабрь',\n        ],\n        monthsShort: [\n          'Янв',\n          'Ферв',\n          'Матр',\n          'Апр',\n          'Май',\n          'Июль',\n          'Июль',\n          'Авг',\n          'Сен',\n          'Окт',\n          'Нояб',\n          'Дек',\n        ],\n        nextMonth: '›',\n        previousMonth: '‹',\n        weekdays: [\n          'Воскресенье',\n          'Понедельник',\n          'Вторник',\n          'Среда',\n          'Четверг',\n          'Пятница',\n          'Суббота',\n        ],\n        weekdaysAbbrev: [\n          'В',\n          'П',\n          'П',\n          'С',\n          'Ч',\n          'П',\n          'С',\n        ],\n        weekdaysShort: [\n          'Вс',\n          'Пн',\n          'Вт',\n          'Ср',\n          'Чт',\n          'Пт',\n          'Сб',\n        ],\n      },\n    };\n    const elems = document.querySelector('.datepicker');\n    M.Datepicker.init(elems, dateOption);\n  }\n\n  handleChange = () => {\n    const elem = document.querySelector('.datepicker');\n    const { value } = elem.M_Datepicker.el;\n    const { getDate } = this.props;\n    getDate(value);\n  }\n\n  render() {\n    const { date } = this.props;\n    return (\n      <input type=\"text\" className=\"datepicker\" value={date} onChange={this.handleChange} />\n    );\n  }\n}\n\nDatePicker.propTypes = {\n  date: PropTypes.string,\n  getDate: PropTypes.func,\n};\n\nDatePicker.defaultProps = {\n  date: PropTypes.number,\n  getDate: PropTypes.func,\n};\n","import React, { Component } from 'react';\nimport { Icon } from 'react-materialize';\nimport DatePicker from './DatePicker';\nimport { createEvent, editEvent } from '../../../Gateway';\nimport './modalCreate.scss';\n\nclass Popup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n    };\n  }\n\n  changeDate = (value) => {\n    this.setState(\n      {\n        date: value,\n      },\n    );\n  }\n\n  handleChange =(event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.state.id === undefined ? this.createNewEvent() : this.editEventData();\n  };\n\n  createNewEvent = () => {\n    const { closePopup } = this.props;\n    createEvent(this.state)\n      \n      .then(closePopup);\n  }\n\n  editEventData = () => {\n    const { id } = this.state;\n    editEvent(id, this.state).then(this.props.closePopup);\n  }\n\n  render() {\n    const {\n      title, date, timeStart, timeEnd, description, color,\n    } = this.state;\n    return (\n      <div id=\"modal1\" className=\"popup z-depth-4\">\n        <div className=\"modal-content\">\n          <form className=\"popup-form\" onSubmit={this.handleSubmit}>\n            <input\n              className=\"popup__title\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Название\"\n              value={title}\n              onChange={this.handleChange}\n            />\n\n            <div className=\"popup__data\">\n              <Icon small>access_time</Icon>\n\n              <div className=\"input-field\">\n                <DatePicker getDate={this.changeDate} date={date} />\n              </div>\n              <div className=\"input-field\">\n                <input\n                  className=\"dataStart\"\n                  type=\"text\"\n                  name=\"timeStart\"\n                  value={timeStart}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className=\"input-field\">\n                <input\n                  className=\"dataEnd\"\n                  type=\"text\"\n                  name=\"timeEnd\"\n                  value={timeEnd}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n            <div className=\"subject\">\n              <Icon small>subject</Icon>\n              <input\n                className=\"popup-form__description\"\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Добавить описание\"\n                value={description}\n                onChange={this.handleChange}\n              />\n            </div>\n            <input\n              type=\"color\"\n              className=\"popup-form__color\"\n              name=\"color\"\n              value={color}\n              onChange={this.handleChange}\n            />\n            <div>\n              <label htmlFor=\"color\">Цвет</label>\n            </div>\n            <button\n              className=\"btn waves-effect waves-light blue\"\n              type=\"submit\"\n              name=\"submit\"\n              onClick={this.handleSubmit}\n            >\n              Сохранить\n            </button>\n            <button\n              type=\"button\"\n              className=\"close btn-flat\"\n              onClick={this.props.closePopup}\n            >\n              <Icon small>close</Icon>\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nexport default Popup;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport moment from 'moment';\nimport Header from './features/Header/componetns/Header';\nimport CalendarGrid from './features/Main/SectorCalendarGrig/componetns/CalendarGrid';\n\nimport Popup from './features/Modal/components/Popup';\nimport { fetchEventsList } from './Gateway';\n\nclass Calendar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      day: 0,\n      show: false,\n      dataEvent: {\n        title: '',\n        timeStart: '',\n        timeEnd: '',\n        date: '',\n        description: '',\n        color: '#6495ed',\n      },\n      checkDelete: false,\n      events: [],\n    };\n  }\n\n  componentDidMount = () => {\n    fetchEventsList()\n      .then((events) => {\n        this.setState({ events });\n      });\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { show, checkDelete } = this.state;\n    if (show !== prevState.show || checkDelete !== prevState.checkDelete) {\n      fetchEventsList()\n        .then((events) => {\n          this.setState({\n            events,\n            checkDelete: false,\n          });\n        });\n    }\n  }\n\n  handlePrevWeek = () => {\n    const { day } = this.state;\n    this.setState({ day: day - 7 });\n  }\n\n  handleNextWeek = () => {\n    const { day } = this.state;\n    this.setState({ day: day + 7 });\n  }\n\n  handleCurrentWeek = () => {\n    this.setState({ day: 0 });\n  }\n\n  currentMonth = () => {\n    const { day } = this.state;\n    const startDate = moment().startOf('isoWeek').add(day, 'day');\n    const endDate = moment().startOf('isoWeek').add(day + 6, 'day');\n\n    const startMonth = startDate.format('MMM');\n    const startYear = startDate.format('YYYY');\n    const endMonth = endDate.format('MMM');\n    const endYear = endDate.format('YYYY');\n\n    let correctDate = `${startMonth} ${startYear} - ${endMonth} ${endYear}`;\n\n    if (startMonth === endMonth && startYear === endYear) {\n      correctDate = `${startMonth} ${endYear}`;\n    } else if (startYear === endYear) {\n      correctDate = `${startMonth} - ${endMonth} ${startYear}`;\n    }\n\n    return correctDate;\n  }\n\n  showPopup = (e) => {\n    e.preventDefault();\n    if (e.target.dataset.option === 'buttonCreateEvent') {\n      this.setState({\n        show: true,\n        dataEvent: {\n          title: '',\n          timeStart: moment(new Date()).format('HH:00'),\n          timeEnd: moment(new Date()).add(1, 'hour').format('HH:00'),\n          date: moment(new Date()).format('DD MM YYYY'),\n          description: '',\n          color: '',\n        },\n      });\n    }\n    if (e.target.dataset.option === 'sell') {\n      this.setState({\n        show: true,\n        dataEvent: {\n          title: '',\n          timeStart: e.target.dataset.time,\n          timeEnd: e.target.nextElementSibling.dataset.time,\n          date: e.target.parentNode.dataset.date,\n          description: '',\n          color: '',\n        },\n      });\n    }\n  }\n\n  getEventData = (e, targetEvent) => {\n    if (e.target.closest('[data-option=\"event\"]') && !e.target.closest('.popup-delete')) {\n      const {\n        id, title, timeStart, date, timeEnd, description, color,\n      } = targetEvent;\n      this.setState({\n        show: true,\n        dataEvent: {\n          id,\n          title,\n          timeStart,\n          timeEnd,\n          date,\n          description,\n          color,\n        },\n      });\n    }\n  }\n\n  closePopup = () => {\n    this.setState({ show: false });\n  }\n\n  handleDelete = () => {\n    this.setState({ checkDelete: true });\n  }\n\n  render() {\n    const {\n      day, events, show, dataEvent,\n    } = this.state;\n    return (\n      <div className=\"calendar\">\n        <Header\n          day={day}\n          handleNextWeek={this.handleNextWeek}\n          handlePrevWeek={this.handlePrevWeek}\n          handleCurrentWeek={this.handleCurrentWeek}\n          currentMonth={this.currentMonth()}\n          openPopup={this.showPopup}\n        />\n        <CalendarGrid\n          day={day}\n          openPopup={this.showPopup}\n          checkDelete={this.handleDelete}\n          events={events}\n          getEventData={this.getEventData}\n        />\n        {show && (<Popup closePopup={this.closePopup} {...dataEvent} />)}\n      </div>\n\n    );\n  }\n}\n\nexport default Calendar;\n","import React from 'react';\nimport Calendar from './Calendar';\n\nfunction App() {\n  return (\n    <Calendar />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}